services:
  postgres:
    build:
      context: .
      dockerfile: docker/Dockerfile.postgres
    container_name: sql-playground-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-playground}
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin123}
      INIT_LOAD_ALL_DATA: ${INIT_LOAD_ALL_DATA:-true}
      DATA_CHUNK_SIZE: ${DATA_CHUNK_SIZE:-10000}
      BACKFILL_MONTHS: ${BACKFILL_MONTHS}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql-scripts:/sql-scripts
      - ./logs:/sql-scripts/logs
    networks:
      - sql-playground-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: sql-playground-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-8080}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - sql-playground-network
    depends_on:
      - postgres

  superset:
    build:
      context: .
      dockerfile: docker/Dockerfile.superset
    container_name: sql-playground-superset
    restart: unless-stopped
    environment:
      SUPERSET_CONFIG_PATH: /app/superset_config.py
      PYTHONPATH: /app
    ports:
      - "${SUPERSET_PORT:-8088}:8088"
    volumes:
      - superset_data:/app/superset_home
      - ./superset_config.py:/app/superset_config.py
      - ./logs/superset:/app/logs
    networks:
      - sql-playground-network
    depends_on:
      - postgres
      - redis
    command: >
      bash -c "
      superset db upgrade &&
      superset fab create-admin --username admin --firstname Admin --lastname User --email admin@superset.com --password admin123 &&
      superset init &&
      gunicorn --bind 0.0.0.0:8088 --workers 4 --timeout 120 'superset.app:create_app()'
      "

  redis:
    image: redis:7-alpine
    container_name: sql-playground-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sql-playground-network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  superset_data:
    driver: local
  redis_data:
    driver: local

networks:
  sql-playground-network:
    driver: bridge